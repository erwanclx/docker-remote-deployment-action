name: CI/CD Workflow

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build AdonisJS image
        run: docker build -t a-quoi-ca-sert:${{ github.sha }} -f ./docker/adonis.Dockerfile .

      - name: Save Docker image as artifact
        run: docker save a-quoi-ca-sert:${{ github.sha }} | gzip > a-quoi-ca-sert-${{ github.sha }}.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: a-quoi-ca-sert-image
          path: a-quoi-ca-sert-${{ github.sha }}.tar.gz

      - name: Upload Docker compose file
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose
          path: docker-compose.yml

  push:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref == 'refs/heads/feat/ci'
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: a-quoi-ca-sert-image

      - name: Load Docker image
        run: gunzip -c a-quoi-ca-sert-${{ github.sha }}.tar.gz | docker load

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag Docker image with SHA
        run: docker tag a-quoi-ca-sert:${{ github.sha }} ${{ vars.DOCKER_USERNAME }}/a-quoi-ca-sert:${{ github.sha }}

      - name: Tag Docker image as latest
        run: docker tag a-quoi-ca-sert:${{ github.sha }} ${{ vars.DOCKER_USERNAME }}/a-quoi-ca-sert:latest

      - name: Push images to Docker Hub
        run: |
          docker push ${{ vars.DOCKER_USERNAME }}/a-quoi-ca-sert:${{ github.sha }}
          docker push ${{ vars.DOCKER_USERNAME }}/a-quoi-ca-sert:latest

  deploy:
    runs-on: ubuntu-latest
    needs: push
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref == 'refs/heads/feat/ci'
    steps:
      - name: Download Docker compose file
        uses: actions/download-artifact@v4
        with:
          name: docker-compose

      - name: Deploy to server
        uses: erwanclx/docker-remote-deployment-action@master
        with:
          remote_docker_host: ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }}
          ssh_port: ${{ vars.SSH_PORT }}
          ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker_login_user: ${{ vars.DOCKER_USERNAME }}
          docker_login_password: ${{ secrets.DOCKER_PASSWORD }}
          docker_login_registry: docker.io
          args: up -d
        env:
          NODE_ENV: production
          PORT: 8080
          APP_KEY: ${{ secrets.APP_KEY }}
          SESSION_DRIVER: ${{ vars.SESSION_DRIVER }}
          DB_USER: ${{ vars.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ vars.DB_DATABASE }}
          HOST: ${{ vars.HOST }}
          LOG_LEVEL: ${{ vars.LOG_LEVEL }}